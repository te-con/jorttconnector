plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'com.getehour.connector.jortt'
version '1.3.2-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar

    archives javadocJar
    archives sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

dependencies {
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.7'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.7'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.22.0'
    testCompile group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.25'
}

if (project.hasProperty('nexusReleases')) {
    publishing {

        publications {
            mavenJava(MavenPublication) {
                artifactId = 'jorttconnector'
                artifact sourcesJar
                artifact javadocJar

                from components.java
            }
        }
        repositories {
            maven {
                credentials {
                    username = project.nexusUsername
                    password = project.nexusPassword
                }

                def releasesRepoUrl = project.nexusReleases
                def snapshotsRepoUrl = project.nexusSnapshots
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html4', true)
    }
}
